"use strict";
/**
 * Copyright (c) 2018-2023, BOTLabs GmbH.
 *
 * This source code is licensed under the BSD 4-Clause "Original" license
 * found in the LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.types23 = void 0;
const mergeType_js_1 = require("./mergeType.js");
const types_21_js_1 = require("./types_21.js");
exports.types23 = (0, mergeType_js_1.mergeType)(
// Use the old types as the base of the new types.
types_21_js_1.types21, 
// We add these new type:
{
    MinCollators: 'u32',
    MaxTopCandidates: 'u32',
    // Renamed collator to candidate since they are not always collators (most of them are candidates)
    Candidate: {
        id: 'AccountId',
        stake: 'Balance',
        delegators: 'Vec<Stake>',
        total: 'Balance',
        // renamed from state to status to be consistent
        status: 'CandidateStatus',
    },
    CandidateStatus: {
        _enum: {
            Active: 'Null',
            Leaving: 'SessionIndex',
        },
    },
    StakingStorageVersion: {
        _enum: ['V1_0_0', 'V2_0_0', 'V3_0_0', 'V4', 'V5'],
    },
}, 
// Remove old DID types:
[
    'MaxCollatorCandidates',
    'MinSelectedCandidates',
    'Collator',
    'CollatorStatus',
]);
