/**
 * Copyright (c) 2018-2023, BOTLabs GmbH.
 *
 * This source code is licensed under the BSD 4-Clause "Original" license
 * found in the LICENSE file in the root directory of this source tree.
 */
import type { AssetDidUri, Caip19AssetId, Caip19AssetInstance, Caip19AssetNamespace, Caip19AssetReference, Caip2ChainId, Caip2ChainNamespace, Caip2ChainReference } from '@kiltprotocol/types';
declare type IAssetDidParsingResult = {
    uri: AssetDidUri;
    chainId: Caip2ChainId;
    chainNamespace: Caip2ChainNamespace;
    chainReference: Caip2ChainReference;
    assetId: Caip19AssetId;
    assetNamespace: Caip19AssetNamespace;
    assetReference: Caip19AssetReference;
    assetInstance?: Caip19AssetInstance;
};
/**
 * Parses an AssetDID uri and returns the information contained within in a structured form.

 * @param assetDidUri An AssetDID uri as a string.
* @returns Object containing information extracted from the AssetDID uri.
 */
export declare function parse(assetDidUri: AssetDidUri): IAssetDidParsingResult;
/**
 * Checks that a string (or other input) is a valid AssetDID uri.
 * Throws otherwise.
 *
 * @param input Arbitrary input.
 */
export declare function validateUri(input: unknown): void;
export {};
